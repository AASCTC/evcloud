# Generated by Django 2.2.6 on 2019-10-08 08:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):



    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Center',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='数据中心名称')),
                ('location', models.CharField(max_length=100, verbose_name='位置')),
                ('desc', models.CharField(blank=True, default='', max_length=200, verbose_name='简介')),
            ],
            options={
                'verbose_name': '分中心',
                'verbose_name_plural': '03_分中心',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='CephConfig',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.CharField(help_text='xml中ceph配置的uuid,libvirt通过uuid获取访问ceph的用户key', max_length=50, verbose_name='xml中ceph的uuid')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='名称')),
                ('config', models.TextField(default='', verbose_name='ceph集群配置文本')),
                ('config_file', models.CharField(blank=True, editable=False, help_text='点击保存，配置文本会存储到这个文件, 此字段自动填充', max_length=200, verbose_name='配置文件保存路径')),
                ('keyring', models.TextField(verbose_name='ceph集群keyring文本')),
                ('keyring_file', models.CharField(blank=True, editable=False, help_text='点击保存，keyring文本会存储到这个文件, 此字段自动填充', max_length=200, verbose_name='keyring文件保存路径')),
                ('hosts_xml', models.TextField(help_text="设置虚机xml中disk/source元素的ceph monitors信息，格式:&lt;host name='10.100.50.1' port='6789'/&gt;", null=True, verbose_name='ceph monitors')),
                ('username', models.CharField(default='admin', help_text='ceph用户名，需与keyring文件一致', max_length=100, verbose_name='ceph用户名')),
            ],
            options={
                'verbose_name': 'CEPH集群配置',
                'verbose_name_plural': '01_CEPH集群配置',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='组名称')),
                ('desc', models.CharField(blank=True, default='', max_length=200, verbose_name='描述')),
                ('center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vms.Center', verbose_name='组所属的分中心')),
                ('users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '宿主机组',
                'verbose_name_plural': '04_宿主机组',
                'ordering': ('id',),
                'unique_together': {('center', 'name')},
            },
        ),
        migrations.CreateModel(
            name='ImageType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='类型名称')),
            ],
            options={
                'verbose_name': '镜像分类',
                'verbose_name_plural': '09_镜像分类',
            },
        ),
        migrations.CreateModel(
            name='Vlan',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='VLAN名称')),
                ('br', models.CharField(max_length=50, verbose_name='网桥')),
                ('type', models.SmallIntegerField(choices=[(0, '私网'), (1, '公网')], default=0, verbose_name='网络类型')),
                ('subnet_ip', models.GenericIPAddressField(verbose_name='子网IP')),
                ('net_mask', models.GenericIPAddressField(blank=True, null=True, verbose_name='子网掩码')),
                ('gateway', models.GenericIPAddressField(blank=True, null=True, verbose_name='网关')),
                ('dns_server', models.GenericIPAddressField(blank=True, null=True, verbose_name='DNS服务IP')),
                ('enable', models.BooleanField(default=True, verbose_name='状态')),
                ('remarks', models.TextField(blank=True, default='', verbose_name='备注')),
            ],
            options={
                'verbose_name': 'VLAN子网',
                'verbose_name_plural': '05_VLAN子网',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='VmXmlTemplate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='模板名称')),
                ('xml', models.TextField(verbose_name='XML模板')),
                ('desc', models.TextField(blank=True, default='', verbose_name='描述')),
            ],
            options={
                'verbose_name': '虚拟机XML模板',
                'verbose_name_plural': '08_虚拟机XML模板',
            },
        ),
        migrations.CreateModel(
            name='MacIP',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('mac', models.CharField(max_length=17, unique=True, verbose_name='MAC地址')),
                ('ipv4', models.GenericIPAddressField(unique=True, verbose_name='IP地址')),
                ('enable', models.BooleanField(default=True, help_text='是否可以被分配使用', verbose_name='开启使用')),
                ('desc', models.TextField(verbose_name='备注说明')),
                ('vlan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='vms.Vlan', verbose_name='VLAN子网')),
                ('used', models.BooleanField(default=False, help_text='是否已分配给虚拟机使用', verbose_name='被使用')),
            ],
            options={
                'verbose_name': 'IP地址',
                'verbose_name_plural': '07_IP地址',
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('ipv4', models.GenericIPAddressField(unique=True, verbose_name='宿主机ip')),
                ('vcpu_total', models.IntegerField(default=24, verbose_name='宿主机CPU总数')),
                ('vcpu_allocated', models.IntegerField(default=0, verbose_name='已分配CPU总数')),
                ('mem_total', models.IntegerField(default=32768, verbose_name='宿主机总内存大小')),
                ('mem_allocated', models.IntegerField(default=0, verbose_name='宿主机已分配内存大小')),
                ('mem_reserved', models.IntegerField(default=2038, verbose_name='宿主机要保留的内存空间大小')),
                ('vm_limit', models.IntegerField(default=10, verbose_name='本机可创建虚拟机数量上限')),
                ('vm_created', models.IntegerField(default=0, verbose_name='本机已创建虚拟机数量')),
                ('enable', models.BooleanField(default=True, verbose_name='宿主机状态')),
                ('desc', models.CharField(blank=True, default='', max_length=200, verbose_name='描述')),
                ('ipmi_host', models.CharField(blank=True, default='', max_length=100)),
                ('ipmi_user', models.CharField(blank=True, default='', max_length=100)),
                ('ipmi_password', models.CharField(blank=True, default='', max_length=100)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vms.Group', verbose_name='宿主机所属的组')),
                ('vlans', models.ManyToManyField(related_name='vlan_hosts', to='vms.Vlan', verbose_name='VLAN子网')),
            ],
            options={
                'verbose_name': '宿主机',
                'verbose_name_plural': '06_宿主机',
            },
        ),
        migrations.CreateModel(
            name='CephBackend',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('pool_name', models.CharField(max_length=100, verbose_name='POOL名称')),
                ('ceph', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vms.CephConfig')),
            ],
            options={
                'verbose_name': 'CEPH存储后端',
                'verbose_name_plural': '02_CEPH存储后端',
                'ordering': ('id',),
            },
        ),
        migrations.AddField(
            model_name='center',
            name='backends',
            field=models.ManyToManyField(to='vms.CephBackend', verbose_name='存储后端'),
        ),
        migrations.CreateModel(
            name='Vm',
            fields=[
                ('uuid', models.UUIDField(primary_key=True, serialize=False, verbose_name='虚拟机UUID')),
                ('name', models.CharField(max_length=200, verbose_name='名称')),
                ('vcpu', models.IntegerField(verbose_name='CPU数')),
                ('mem', models.IntegerField(verbose_name='内存大小')),
                ('disk', models.CharField(help_text='vm自己的系统盘，保存于ceph中的rdb文件名称', max_length=100, unique=True, verbose_name='系统盘名称')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('remarks', models.TextField(blank=True, default='', verbose_name='备注')),
                ('xml', models.TextField(help_text='定义虚拟机的当前的XML内容', verbose_name='虚拟机当前的XML')),
                ('deleted', models.BooleanField(default=False, verbose_name='删除')),
                ('host', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='vms.Host', verbose_name='宿主机')),
                ('mac_ip', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ip_vm', to='vms.MacIP', verbose_name='MAC IP')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_vms', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
            ],
            options={
                'verbose_name': '虚拟机',
                'verbose_name_plural': '11_虚拟机',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='镜像名称')),
                ('version', models.CharField(max_length=100, verbose_name='系统版本信息')),
                ('base_image', models.CharField(default='', help_text='用于创建镜像快照', max_length=200, verbose_name='基础镜像')),
                ('enable', models.BooleanField(default=True, help_text='若取消复选框，用户创建虚拟机时无法看到该镜像', verbose_name='启用')),
                ('create_newsnap', models.BooleanField(default=False, help_text='选中该选项，保存时会基于基础镜像"\n           "创建新快照（以当前时间作为快照名称）,更新操作系统模板。新建snap时请确保基础镜像处于关机状态！', verbose_name='更新模板')),
                ('snap', models.CharField(default='', max_length=200, verbose_name='当前生效镜像快照')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('desc', models.TextField(blank=True, default='', verbose_name='描述')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vms.ImageType', verbose_name='类型')),
                ('xml_tpl', models.ForeignKey(help_text='使用此镜象创建虚拟机时要使用的XML模板，不同类型的镜像有不同的XML格式', on_delete=django.db.models.deletion.CASCADE, to='vms.VmXmlTemplate', verbose_name='xml模板')),
                ('ceph', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vms.CephBackend', verbose_name='CEPH存储后端')),
            ],
            options={
                'verbose_name': '操作系统镜像',
                'verbose_name_plural': '10_操作系统镜像',
                'unique_together': {('name', 'version')},
            },
        ),
    ]
